AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: MeVerse serverless backend.

Globals:
  Function:
    Timeout: 90

Parameters:
  Env:
    Type: String
    Default: dev
  AssetBucketName:
    Type: String
    Default: meverse
  AssetTableName:
    Type: String 
    Default: Asset
  MetadataLinkTableName:
    Type: String 
    Default: MetadataLink
  WalletTableName:
    Type: String 
    Default: Wallet

Resources:
  AssetBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${AssetBucketName}-${Env}"

  AssetTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "${AssetTableName}-${Env}"
      PrimaryKey: 
        Name: WalletAddress
        Type: String
  
  MetadataLinkTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "${MetadataLinkTableName}-${Env}"
      PrimaryKey:
        Name: TokenId
        Type: Number

  WalletTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "${WalletTableName}-${Env}"
      PrimaryKey:
        Name: WalletAddress
        Type: String

  GetMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/getMetadata/
      Handler: index.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          REGION: eu-central-1
          DYNAMO_METADATA_TABLE: !Sub "${MetadataLinkTableName}-${Env}"
          METADATA_URI: https://ipfs.io/ipfs
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref AssetBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref MetadataLinkTable
      Events:
        GetMetadata:
          Type: Api
          Properties:
            Path: /metadata/{id}
            Method: GET

  UploadAssetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/uploadAsset/
      Handler: index.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          REGION: eu-central-1
          DYNAMO_METADATA_TABLE: !Sub "${MetadataLinkTableName}-${Env}"
          DYNAMO_WALLET_TABLE: !Sub "${WalletTableName}-${Env}"
          S3_BUCKET: !Sub "${AssetBucketName}-${Env}"
          METADATA_URI: https://ipfs.io/ipfs
          PINATA_KEY: 2027bc27eac9e5f17c6c
          PINATA_SECRET_KEY: f1ac9cf42ba99fc8777849d778e6ab02a41f4bb4b035aa7aa738f83191c0217d
          CONTRACT_ADDRESS: "0xe708dD356294d019414Ca71033C7a2d481655198"
          ALCHEMY_API_URL: https://eth-rinkeby.alchemyapi.io/v2/ynTekJ0k_wI1iLLwiU8B285JZTqyoxt5
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref AssetBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref MetadataLinkTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletTable

      Events:
        UploadAsset:
          Type: Api
          Properties:
            Path: /upload
            Method: POST

  GenerateAssetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/generateAsset/
      Handler: app.handler.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          MAX_ASSETS_PER_WALLET: 5
          ASSET_DYNAMODB_TABLE: !Sub "${AssetTableName}-${Env}"
          WALLET_DYNAMODB_TABLE: !Sub "${WalletTableName}-${Env}"
          S3_BUCKET: !Sub "${AssetBucketName}-${Env}"
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref AssetBucket
        - DynamoDBCrudPolicy:
            TableName: !Ref AssetTable
        - DynamoDBCrudPolicy:
            TableName: !Ref WalletTable
      Events:
        GenerateAsset:
          Type: Api
          Properties:
            Path: /generate
            Method: POST

  CorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/cors/
      Handler: handler.lambda_handler
      Runtime: python3.8
      Events:
        CorsOptions:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: OPTIONS
    

Outputs:
  MeVerseApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage/"